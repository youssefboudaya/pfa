@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Evaluations List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-xs-12">
        <div class="white-box">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="col-md-12">User</label>
                        <div class="col-md-12">
                            <select class="form-control" id="users-select" required>
                                <option value="">Select user</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="form-group">
                        <button class="btn btn-primary pull-right" id="print" disabled>Print Evaluation Sheet</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row" id="print-div">
    <div class="col-sm-12">
        <div class="white-box">
            <div class="col-sm-12">
                <h3 class="box-title" class="title"></h3>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <p><b>Username&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </b> <span id="evaluationsheet-username">--</span></p>
                    <p><b>Evaluator&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </b> <span id="evaluationsheet-evaluator">--</span></p>
                    <p><b>Created At&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </b> <span id="evaluationsheet-created-at">--</span></p>
                    <p><b>Available Until: </b> <span id="evaluationsheet-available-until">--</span></p>
                    <p><b>Total Score&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </b> <span id="evaluationsheet-score">--</span></p>
                </div>
            </div>
            <p class="text-muted"><code></code></p>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Question</th>
                            <th>Answer</th>
                            <th>Score</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let evaluationSheet = null;
            let evaluationSheetId = "@ViewBag.Id";

            evaluationSheet = getEvaluationSheetById(evaluationSheetId);

            evaluationSheet.indicators[0].questions[0].answers.forEach(function (answer) {
                $("#users-select").append(`<option value="${answer.employe.idUser}">${answer.employe.name}</option>`)
            });

            $(document).on("change", "#users-select", function () {
                $("tbody").html("");
                let selectedUser = $(this).val();
                let totalScore = 0;
                let evaluator;

                if (selectedUser != "") {
                    let lastAnswerId = [];
                    let indicatorIds = [];
                    evaluationSheet.indicators.forEach(function (indicator) {
                        if (!indicatorIds.includes(indicator.id)) {
                            indicatorIds.push(indicator.id);
                            $("tbody").append(`<tr><td colspan="3" style="text-align: center"><b>Indicator : ${indicator.label}</b></td></tr>`);

                            indicator.questions.forEach(function (question) {
                            let answer = question.answers.find(a => a.employe.idUser == selectedUser);

                            if (lastAnswerId.includes(answer.id)  == false) {
                                totalScore += answer.score;

                                let row = `<tr>`
                                row += `<td>${question.question}</td>`
                                row += `<td>${answer.reponse}</td>`
                                row += `<td>${answer.score}</td>`
                                row += `</tr>`

                                $("tbody").append(row);
                                evaluator = answer.employe.name;
                                lastAnswerId.push(answer.id);
                            }
                        });
                        }
                    });

                    $("#evaluationsheet-username").text(`${evaluationSheet.subject.name}`)
                    $("#evaluationsheet-created-at").text(`${evaluationSheet.createdAt}`)
                    $("#evaluationsheet-available-until").text(`${evaluationSheet.availableUntil}`)
                    $("#evaluationsheet-evaluator").text(`${evaluator}`)
                    $("#evaluationsheet-score").text(totalScore)

                    $("#print").prop("disabled", false)
                } else {
                    $("#evaluationsheet-username").text("--")
                    $("#evaluationsheet-created-at").text("--")
                    $("#evaluationsheet-available-until").text("--")
                    $("#evaluationsheet-evaluator").text("--")
                    $("#evaluationsheet-score").text("--")

                    $("#print").prop("disabled", true)
                }
            });

            $('#print').on('click', function () {
                $.print("#print-div");
            });
        });
    </script>
}